# Generated by Django 4.2.19 on 2025-03-02 05:05

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.models.mixins
import nautobot.extras.models.statuses
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0114_computedfield_grouping'),
        ('dcim', '0062_module_data_migration'),
        ('nautobot_igp_models', '0003_alter_isisconfiguration_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OSPFConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('process_id', models.PositiveIntegerField(default=1)),
                ('instance', models.ForeignKey(limit_choices_to={'protocol': 'OSPF'}, on_delete=django.db.models.deletion.CASCADE, related_name='ospf_configurations', to='nautobot_igp_models.igproutinginstance')),
                ('status', nautobot.extras.models.statuses.StatusField(null=True, on_delete=django.db.models.deletion.PROTECT, to='extras.status')),
                ('tags', nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'OSPF Configuration',
                'verbose_name_plural': 'OSPF Configurations',
                'unique_together': {('instance', 'process_id')},
            },
            bases=(nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OSPFInterfaceConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('_custom_field_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=15)),
                ('cost', models.PositiveIntegerField(default=1)),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ospf_configurations', to='dcim.interface')),
                ('ospf_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interface_configurations', to='nautobot_igp_models.ospfconfiguration')),
                ('status', nautobot.extras.models.statuses.StatusField(null=True, on_delete=django.db.models.deletion.PROTECT, to='extras.status')),
                ('tags', nautobot.core.models.fields.TagsField(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'OSPF Interface Configuration',
                'verbose_name_plural': 'OSPF Interface Configurations',
                'unique_together': {('ospf_config', 'interface')},
            },
            bases=(nautobot.extras.models.mixins.DynamicGroupMixin, nautobot.extras.models.mixins.NotesMixin, models.Model),
        ),
    ]
